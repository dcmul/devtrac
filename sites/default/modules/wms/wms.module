<?php
// $Id$


/**
 * @file
 * WMS module.
 */

function wms_check_perm_getfeatureinfo() {
  $result = TRUE;
  foreach (module_implements('perm_getfeatureinfo') as $module) {
    $function = $module .'perm_getfeatureinfo';
    $result = $result && call_user_func_array($function);
  }
  return $result;
}

function wms_menu() {
  $items['openlayers/wms/wmsgetfeatureinfo'] = array(
    'page callback' => 'wms_ajax_wmsgetfeatureinfo',
    'type' => MENU_CALLBACK,
    'access callback' => 'wms_check_perm_getfeatureinfo',
  );
  return $items;
}

function wms_ajax_wmsgetfeatureinfo() {
  $url = $_POST['url'];
  $url_array = parse_url($url);
  $query = $url_array['query'];
  parse_str($query, $params);

  $layerstp = explode(',', $params['QUERY_LAYERS']);
  $layers = Array();
  foreach ($layerstp as $layer) {
    $layertp = explode(':', $layer);
    $layers[] = Array('namespace' => $layertp[0], 'layer' => $layertp[1]);
  }

  $requesturl = Array(
    'request_uri' => $url,
  );
  $content_object = proxy($requesturl);

  if (($params['INFO_FORMAT'] == 'text/html') || ($params['INFO_FORMAT'] == 'text/plain')) {
    // Handle specific codes
    switch ($content_object->code) {
      case 200:
      case 304:
        // OK

      case 301:
      case 302:
      case 307:
      // Permanent Redirect
        print $content_object->data;
        exit();
        break;
      default:
        print t('An error occured while retrieving the data.');
        exit();
    }
  }
  if (is_array($content_object)) {
    if (strpos($content_object[0], "Domain\ not\ in\ whitelist")) {
      print $content_object[0] . t("Check the proxy module settings.");
      exit();
    }
    print_r( $content_object);
  }
  elseif ($content_object) {
    if ($content_object->code == 200) {
      $return = (string)$content_object->data;
      $resultarray = wms_process_wmsgetfeatureinfo_result($return, $layers);

      print theme('wms_getfeatureinfo', $resultarray, $layers);
      exit;
    }
  }
  else {
    print 'Something went wrong';
  }
}

function wms_hook_info() {
  return array(
    'wms' => array(
      'wms' => array(
        'perm_getfeatureinfo' => array(
          'runs when' => t('user_access checks if someone can process getfeatureinfo results'),
        ),
        'process_getfeatureinfo' => array(
          'runs when' => t('When someone clicks the \'process\' link in the getfeatureresult table'),
        ),
      ),
    ),
  );
}

/**
 * Implementation of hook_ctools_plugin_api().
 */
function wms_ctools_plugin_api($module, $api) {
  if ($module == "openlayers") {
    switch ($api) {
      case 'openlayers_layers':
        return array('version' => 1);
    }
  }
}

/**
 * Implementation of hook_openlayers_behaviors()
 */
function wms_openlayers_behaviors() {
  return array(
    'openlayers_behavior_wmsgetfeatureinfo' => array(
      'title' => t('Get Feature Info'),
      'description' => t('Queries WMS server for more info about features on the map.'),
      'type' => 'layer',
      'path' => drupal_get_path('module', 'wms') . '/includes/behaviors',
      'file' => 'openlayers_behavior_wmsgetfeatureinfo.inc',
      'behavior' => array(
        'class' => 'openlayers_behavior_wmsgetfeatureinfo',
        'parent' => 'openlayers_behavior',
      ),
    ),
  );
}

/**
 * Implementation of hook_theme().
 */
function wms_theme() {

  $items['wms_getfeatureinfo'] = array(
      'template' => 'wms-getfeatureinfo',
      'arguments' => array(
        'result' => NULL,
        'layers' => NULL,
  )
  );
  return $items;
}

function template_preprocess_wms_getfeatureinfo(&$variables) {
  $rows = Array();
  $header = Array();
  foreach ($variables['result'] as $layer => $data) {
    foreach ($data as $row) {
      foreach ($row as $headername => $field) {
        $headerdata[] = Array('data' => $headername, 'class' => $headername);
        $rowdata[] = Array('data' => $field, 'class' => $headername);
      }
      $header[] = $headerdata;
      $rows[] = $rowdata;
      unset($rowdata);
      unset($headerdata);
    }
    $variables['tables'][$layer]['header'] = $header[0];
    $variables['tables'][$layer]['rows'] = $rows;
    $variables['htmltables'][] = theme_table($header[0], $rows);
    unset($header);
    unset($rows);
  }
}

function wms_process_wmsgetfeatureinfo_result($rawxml, $layers) {
  module_load_include('inc', 'wms', 'includes/gml_to_wkt');
  $xmlresult = simplexml_load_string($rawxml);
  $errors = libxml_get_errors();
  foreach ($errors as $error) {
    /* no errors to be found that are any help*/
    return display_xml_error($error, $xml);
  }
  libxml_clear_errors();
  $namespaces = $xmlresult->getNameSpaces(true);

  $gml = $xmlresult->children($namespaces['gml']);

  $result = Array();
  foreach ($layers as $layer) {
    $layername = $layer['layer'];
    $namespace = $layer['namespace'];
    $features = $gml->featureMember;
    foreach ($features as $feature) {
      $featuredetails = $feature->children($namespaces[$namespace]);
      foreach ((array)$featuredetails->$layername as $key => $value) {
        if (!isset($layerresult)) {
          $layerresult = Array();
        }
        if (is_string($value)) {
          $layerresult[$key] = $value;
        }
        else {
          $the_geom = $value->children($namespaces['gml']);
          if (isset($the_geom)) {
            $layerresult[$key] = wms_getwkt($the_geom);
          }
        }
      }
      if (isset($layerresult)) {
        $result[$namespace . ":" . $layername][] = $layerresult;
      }
      unset($layerresult);
    }
  }
  return $result;
}

function wms_block($op = 'list', $delta = 0, $edit = array()) {
  switch ($op) {
    case 'list' :
      $blocks[0]['info'] = t('GetFeatureInfo Results');
      return $blocks;
      break;
    case 'view' :
      $block = array();
      switch ($delta) {
        case 0:
          $block['subject'] = "";
          $block['content'] = '<div style="display: none"><div id="getfeatureinfo">'. t('Click a feature on the map to see the details') . '</div></div>';
          return $block;
          break;
      }
    break;
  }
}
