<?php
// $Id: questionaire_question.install,v 1.1 2010/12/21 06:46:30 batje Exp $

/**
 * @file
 * Install, update and uninstall functions for the XXX module.
 */


/**
 * Implementation of hook_schema().
 */
function devtrack_module_schema() {
  $schema = array();

  $schema['devtrac_bbsync'] = array(
    'description' => 'Contains SyncBB.',
    'fields' => array(
      'nid' => array(
        'type' => 'serial',
        'not null' => TRUE,
        'unsigned' => TRUE,
        'description' => 'Nid of the syncbb.',
      ),
      'vid' => array(
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
        'description' => 'Version ID of the syncbb.',
      ),
      'ftnid' => array(
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
        'description' => 'Nid of the field trip.',
      ),
      'result' => array(
        'type' => 'varchar',
        'length' => 4096,
        'not null' => TRUE,
        'description' => 'Results of the sync.',
      ),
      'synced' => array(
        'type' => 'int',
        'size' => 'tiny',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => 'Did we try to sync?',
      ),
      'error' => array(
        'type' => 'int',
        'size' => 'tiny',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => 'Something went wrong durint the sync.',
      ),
    ),
    'primary key' => array('nid'),
      'indexes' => array(
      'vid' => array('vid'),
    ),
  );

  return $schema;
}


/**
 * Implementation of hook_install().
 */
function devtrack_module_install() {
  // Create tables.
  drupal_install_schema('devtrac_bbsync');
}

/**
 * Implementation of hook_uninstall().

 */
function devtrack_module_uninstall() {
  drupal_uninstall_schema('devtrac_bbsync');
}

function devtrack_module_update_6001() {
  // Declare new modules
  $new_modules = array(
    'colorbox',
    'environment',
    'jquery_update',
  );  
  module_enable($new_modules);

  $ret = array('success' => TRUE, 'query' => 'enabled colorbox, environment and jquery_update modules; updated all field trips and all report items' );
  return $ret;
  
}

function devtrack_module_update_6002() {
  // Declare new modules
  $new_modules = array(
    'spamspan',
    'search_config',
  );  
  module_enable($new_modules);
  
  db_query("INSERT INTO {filters} (fid, format, module, delta, weight) VALUES ('11', '1', 'spamspan', '0', '10')");  
}

function devtrack_module_update_6003() {
  // Clear all custom_breadcrumbs tables
  db_query("TRUNCATE TABLE custom_breadcrumb");
  db_query("TRUNCATE TABLE custom_breadcrumbs_panels");
  db_query("TRUNCATE TABLE custom_breadcrumbs_paths");
  db_query("TRUNCATE TABLE custom_breadcrumbs_taxonomy_term");
  db_query("TRUNCATE TABLE custom_breadcrumbs_taxonomy_vocabulary");
  db_query("TRUNCATE TABLE custom_breadcrumbs_views");
  db_query("TRUNCATE TABLE custom_breadcrumbsapi");

  // Declare new modules
  $new_modules = array(
    'devtrac_breadcrumbs',
  );  
  module_enable($new_modules);

  $ret[] = array('success' => TRUE, 'query' => 'cleared all custom_breadcrumbs tables; enabled devtrac_breabcrumbs module');
  return $ret;
  
  // Running "drush fra" now, will install the devtrac_breadcrumbs feature and populate all the tables again
}

function devtrack_module_update_6004() {
  // Create a new vocabulary
  $vocabulary = array(
    'name' => t('Site Report Type'), // ALERT: Hardcoded vocabulary name
    'description' => t(''),
    'help' => t(''),
    'nodes' => array(
      'ftritem' => 'ftritem', // ALERT: Hardcoded node_type machine name
    ),
    'tags' => 0,
    'multiple' => 0,
    'required' => 0,
    'weight' => 0,
    'hierarchy' => 0,
    'relations' => 1,
    'op' => t('Save'),
    'submit' => t('Save'),
    'form_id' => taxonomy_form_vocabulary,
  );
  taxonomy_save_vocabulary($vocabulary);
  $vid = $vocabulary['vid'];

  // Add terms to the vocabulary
  $term = array(
    'name' => t('Site Visit'),
    'description' => t(''),
    'parent' => Array(
      0 => '0',
    ),
    'relations' => Array(
      0 => '0',
    ),
    'synonyms' => '',
    'depth' => 0,
    'weight' => 0,
    'vid' => $vid,
    'op' => t('Save'),
    'submit' => t('Save'),
    'destination' => 'admin/content/taxonomy/'. $vid .'/add/term',
    'form_id' => taxonomy_form_term,
  );
  taxonomy_save_term($term);

  $term = array(
    'name' => t('Roadside Observation'),
    'description' => t(''),
    'parent' => Array(
      0 => '0',
    ),
    'relations' => Array(
      0 => '0',
    ),
    'synonyms' => '',
    'depth' => 0,
    'weight' => 1,
    'vid' => $vid,
    'op' => t('Save'),
    'submit' => t('Save'),
    'destination' => 'admin/content/taxonomy/'. $vid .'/add/term',
    'form_id' => taxonomy_form_term,
  );
  taxonomy_save_term($term);

  $term = array(
    'name' => t('Human Interest Story'),
    'description' => t(''),
    'parent' => Array(
      0 => '0',
    ),
    'relations' => Array(
      0 => '0',
    ),
    'synonyms' => '',
    'depth' => 0,
    'weight' => 2,
    'vid' => $vid,
    'op' => t('Save'),
    'submit' => t('Save'),
    'destination' => 'admin/content/taxonomy/'. $vid .'/add/term',
    'form_id' => taxonomy_form_term,
  );
  taxonomy_save_term($term);

  // Now update the existing report items
  $nids = db_query("SELECT nid FROM {node} WHERE type = '%s'", 'ftritem'); // ALERT: Hardcoded node_type machine name
  while ($nid = db_fetch_object($nids)) {
    $node = node_load($nid->nid);
    $vocabularies = taxonomy_get_vocabularies('ftritem'); // ALERT: Hardcoded node_type machine name
    foreach ($vocabularies as $vocabulary) {
      if ($vocabulary->name == 'Site Report Type') { // ALERT: Hardcoded vocabulary name
        $vid = $vocabulary->vid;
      }
    }
    if (isset($node->field_ftritem_place[0]['nid']) && (is_numeric($node->field_ftritem_place[0]['nid']))) {
      // This was a 'Site Visit'
      $term = devtrack_module_get_term_by_name_vid('Site Visit', $vid);
    }
    else {
      // This was a 'Roadside Observation'
      $term = devtrack_module_get_term_by_name_vid('Roadside Observation', $vid);
    }
    if (!isset($node->taxonomy[$term[0]->tid])) {
      $node->taxonomy[$term[0]->tid] = $term[0];
    }
    node_save($node);
  }

  $ret[] = array('success' => TRUE, 'query' => 'created Site Report Type vocabulary and updated all report items');
  return $ret;
}

function devtrack_module_update_6005() {
  $vocabulary = devtrack_module_get_vocabulary_by_name('Site Report Type');
  $vid = $vocabulary->vid;

  // Save the original module from the vocabulary
  $original = db_result(db_query("SELECT module FROM {vocabulary} WHERE vid = %d", $vid));

  // Update the vocabulary
  db_query("UPDATE {vocabulary} SET module = '%s' WHERE vid = %d", 'taxonomy_redirect', $vid);

  // Add an entry to vocabulary_redirect table
  db_query("INSERT INTO {taxonomy_redirect} (vid, tid, module, path, separator_replace, remove_text, filter, path_case)
            VALUES (%d, NULL, '%s', '%s', '%s', '%s', %d, '%s')", $vid, $original, 'tripreports/map?sitereporttype=!tid', '', '', 1, 'No transform');

  $ret[] = array('success' => TRUE, 'query' => 'added entry to taxonomy_redirect');
  return $ret;

}

/*
 *  https://www.pivotaltracker.com/story/show/16239085
 *  Add Youth Centre
 */
function devtrack_module_update_6006() {
  $term = array(
    'name' => t('Youth Centre'),
    'description' => t(''),
    'parent' => Array(
      0 => '49',
    ),
    'relations' => Array(
      0 => '0',
    ),
    'synonyms' => '',
    'depth' => 1,
    'weight' => 2,
    'vid' => 1, // placetype
    'op' => t('Save'),
    'submit' => t('Save'),
    'destination' => 'admin/content/taxonomy/1/add/term',
    'form_id' => taxonomy_form_term,
  );
  taxonomy_save_term($term);
}

function devtrack_module_update_6007() {
  $new_modules = array(
    'devtrac_wms',
  );  
  module_enable($new_modules);
}